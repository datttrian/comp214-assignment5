-- Sample data for gpnr_request
INSERT INTO gpnr_request (request_id, request_created_at, request_status, request_cost, message, customer_username)
SELECT
    ROW_NUMBER() OVER (ORDER BY dbms_random.value) AS request_id,
    SYSTIMESTAMP - INTERVAL '30' DAY * ROUND(DBMS_RANDOM.VALUE(1, 100)) AS request_created_at,
    CASE ROUND(DBMS_RANDOM.VALUE(1, 3))
        WHEN 1 THEN 'Pending'
        WHEN 2 THEN 'Processing'
        ELSE 'Completed'
    END AS request_status,
    ROUND(DBMS_RANDOM.VALUE(10, 500), 2) AS request_cost,
    'Sample message for request ' || ROW_NUMBER() OVER (ORDER BY dbms_random.value) AS message,
    customer_username
FROM
    gpnr_customer
WHERE
    ROWNUM <= 100; -- Adjust the number of requests as needed

-- Sample data for gpnr_product_request
INSERT INTO gpnr_product_request (product_id, request_id, product_request_quantity)
SELECT
    product_id,
    request_id,
    ROUND(DBMS_RANDOM.VALUE(1, 10)) AS product_request_quantity
FROM
    (SELECT product_id FROM gpnr_product ORDER BY dbms_random.value) p,
    (SELECT request_id FROM gpnr_request ORDER BY dbms_random.value) r
WHERE
    ROWNUM <= 200; -- Adjust the number of product requests as needed


CREATE OR REPLACE FUNCTION calculate_shipping_cost(
    p_weight NUMBER
) RETURN NUMBER IS
    lv_cost_per_kg   NUMBER := 1.5;
    lv_base_cost     NUMBER := 5;
    lv_shipping_cost NUMBER;
BEGIN
    lv_shipping_cost := lv_base_cost + (p_weight * lv_cost_per_kg);
    RETURN lv_shipping_cost;
END calculate_shipping_cost;
/

CREATE OR REPLACE FUNCTION format_phone_number(
    p_phone_number VARCHAR2
) RETURN VARCHAR2 IS
    v_formatted_number VARCHAR2(20);
BEGIN
    p_phone_number := REGEXP_REPLACE(p_phone_number, '[^0-9]', '');
    IF LENGTH(p_phone_number) = 10 THEN
        v_formatted_number := '('
                              || SUBSTR(p_phone_number, 1, 3)
                                 || ') '
                                 || SUBSTR(p_phone_number, 4, 3)
                                    || '-'
                                    || SUBSTR(p_phone_number, 7);
    ELSE
        v_formatted_number := NULL;
    END IF;

    RETURN v_formatted_number;
END format_phone_number;
/

